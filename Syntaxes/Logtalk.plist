{
    backgroundColor = "#ffffff"; 
    fileTypes = (lgt, mlgt, config, loader); 
    foldingStartMarker = ":-\\s+(object|protocol|category)(?=[(])"; 
    foldingStopMarker = ":-\\s+end_(object|protocol|category)(?=[.])"; 
    foregroundColor = "#000000"; 
    highlightPairs = (("(", ")"), ("[", "]"), ("{", "}")); 
    increaseIndentPattern = ":-$"; 
    name = Logtalk; 
    scopeName = "source.logtalk";
    patterns = (
        {
            begin = "/\\*"; 
            end = "\\*/"; 
            fontStyle = (italic); 
            foregroundColor = "#23763A"; 
            name = "comment.block.logtalk"; 
        }, 
        {
            fontStyle = (italic); 
            foregroundColor = "#23763A"; 
            match = "%.*$"; 
            name = "comment.line.logtalk"; 
        }, 
        {
            foregroundColor = "#881280"; 
            match = ":-\\s+(object|protocol|category)(?=[(])"; 
            name = "keyword.directives.entity.opening.logtalk"; 
        }, 
        {
            foregroundColor = "#881280"; 
            match = ":-\\s+end_(object|protocol|category)(?=[.])"; 
            name = "keyword.directives.entity.closing.logtalk"; 
        }, 
        {
            foregroundColor = "#881280"; 
            match = "\\b(extends|i(nstantiates|mp(orts|lements))|specializes)(?=[(])"; 
            name = "keyword.directives.entity.relations.logtalk"; 
        }, 
        {
            foregroundColor = "#881280"; 
            match = ":-\\s+(calls|encoding|in(itialization|fo)|uses)(?=[(])"; 
            name = "keyword.directives.entity.others.logtalk"; 
        }, 
        {
            foregroundColor = "#881280"; 
            match = ":-\\s+(alias|info|d(ynamic|iscontiguous)|m(etapredicate|ode|ultifile)|p(ublic|r(otected|ivate))|op|uses)(?=[(])"; 
            name = "keyword.directives.predicate.logtalk"; 
        }, 
        {
            foregroundColor = "#0000ff"; 
            match = "(::|\\^\\^)"; 
            name = "keyword.operator.message-sending.logtalk"; 
        }, 
        {
            foregroundColor = "#0000ff"; 
            match = "(\\?|@)"; 
            name = "keyword.operator.mode.logtalk"; 
        }, 
        {
            foregroundColor = "#0000ff"; 
            match = "(@=<|@<|@>|@>=|==|\\\\==)"; 
            name = "keyword.operator.term-comparison.logtalk"; 
        }, 
        {
            foregroundColor = "#0000ff"; 
            match = "(=<|<|>|>=|=:=|=\\\\=)"; 
            name = "keyword.operator.arithmetic-comparison.logtalk"; 
        }, 
        {
            foregroundColor = "#0000ff"; 
            match = "(<<|>>|/\\\\|\\\\/|\\\\)"; 
            name = "keyword.operator.bitwise.logtalk"; 
        }, 
        {
            foregroundColor = "#0000ff"; 
            match = "\\<(mod|rem)\\>"; 
            name = "keyword.operator.evaluable.logtalk"; 
        }, 
        {
            foregroundColor = "#0000ff"; 
            match = "(\\*\\*|\\+|-|\\*|/|//)"; 
            name = "keyword.operator.evaluable.logtalk"; 
        }, 
        {
            foregroundColor = "#0000ff"; 
            match = "(:-|!|\\\\+|,|;|-->|->|=|\\=|\\.|=\\.\\.|\\<is\\>)"; 
            name = "keyword.operator.misc.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(true|fail|repeat)\\>"; 
            name = "keyword.predicates.control.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(ca(ll|tch)|throw|once)(?=[(])"; 
            name = "keyword.predicates.control.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<((get|peek|put)_(char|code|byte)|nl)(?=[(])"; 
            name = "keyword.predicates.chars-and-bytes-io.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<nl\\>"; 
            name = "keyword.predicates.chars-and-bytes-io.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(atom_(length|concat|chars|codes)|sub_atom|char_code|number_(chars|codes))(?=[(])"; 
            name = "keyword.predicates.atom-term-processing.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(var|atom|integer|float|atomic|compound|n(onvar|umber))(?=[(])"; 
            name = "keyword.predicates.term-testing.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(read_term|read|write|writeq|write_(canonical|term)|op|current_op|char_conversion|current_char_conversion)(?=[(])"; 
            name = "keyword.predicates.term-io.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(arg|copy_term|functor)(?=[(])"; 
            name = "keyword.predicates.term-creation-and-decomposition.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(unify_with_occurs_check)(?=[(])"; 
            name = "keyword.predicates.term-unification.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<((set|current)_(in|out)put|open|close|flush_output|stream_property|at_end_of_stream|set_stream_position)(?=[(])"; 
            name = "keyword.predicates.stream-selection-and-control.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(flush_output|at_end_of_stream)\\>"; 
            name = "keyword.predicates.stream-selection-and-control.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<((set|current)_prolog_flag)(?=[(])"; 
            name = "keyword.predicates.prolog-flags.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(logtalk_(compile|l(ibrary_path|oad)))(?=[(])"; 
            name = "keyword.predicates.compiling-and-loading.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<((abolish|define)_events|current_event)(?=[(])"; 
            name = "keyword.predicates.event-handling.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<((current|set)_logtalk_flag|halt)(?=[(])"; 
            name = "keyword.predicates.hooks.implementation-defined.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(halt)\\>"; 
            name = "keyword.predicates.hooks.implementation-defined.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<((create|abolish)_(object|protocol|category))(?=[(])"; 
            name = "keyword.predicates.entity-creation-and-abolishing.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(current_(object|protocol|category)|(object|protocol|category)_property||extends_(object|protocol)|imp(orts_category|lements_protocol)|(instantiates|specializes)_class)(?=[(])"; 
            name = "keyword.predicates.reflection.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<((for|retract)all)(?=[(])"; 
            name = "keyword.predicates.misc.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(parameter|se(lf|nder)|this)(?=[(])"; 
            name = "keyword.predicates.execution-context.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(abolish|assert(a|z)|clause|retract|retractall)(?=[(])"; 
            name = "keyword.predicates.database.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<((bag|set)of|f(ind|or)all)(?=[(])"; 
            name = "keyword.predicates.all-solutions.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(current_predicate|predicate_property)(?=[(])"; 
            name = "keyword.predicates.reflection.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(before|after)(?=[(])"; 
            name = "keyword.predicates.event-handler.logtalk"; 
        }, 
        {
            foregroundColor = "#1A1AA6"; 
            match = "\\<(expand_term|phrase)(?=[(])"; 
            name = "keyword.predicates.grammar-rule.logtalk"; 
        }, 
        {
            foregroundColor = "#C44B45"; 
            match = "\\<(0'[0-9a-zA-Z]|0b[0-1]+|0o[0-7]+|0x[0-9a-fA-F]+)\\>"; 
            name = "constant.numeric.logtalk"; 
        }, 
        {
            foregroundColor = "#C44B45"; 
            match = "\\<([0-9]+\\.?[0-9]*((e|E)(\\+|-)[0-9]+)?)\\>"; 
            name = "constant.numeric.logtalk"; 
        }, 
        {
            begin = "'"; 
            end = "'"; 
            foregroundColor = "#881314"; 
            name = "string.quoted-atoms.logtalk"; 
            swallow = "\\\\."; 
        }, 
        {
            begin = "\""; 
            end = "\""; 
            foregroundColor = "#881314"; 
            name = "string.double-quoted.logtalk"; 
            swallow = "\\\\."; 
        }, 
        {
            foregroundColor = "#848AB9"; 
            match = "\\<(\\u|_)\\w*\\>"; 
            name = "keyword.variable.logtalk"; 
        }
    ); 
    smartTypingPairs = (("(", ")"), ("[", "]"), ("{", "}"), ("\"", "\""), ("'", "'")); 
    uuid = "C11FA1F2-6EDB-11D9-8798-000A95DAA580"; 
}
